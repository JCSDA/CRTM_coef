!
! Auto-generated by gen_nc.rb, $Revision: 35240 $
!

  ! Function to read the global/group attributes.

  FUNCTION ReadGAtts( &
    ncid   , &
    Release, &
    Version, &
    Title  , &
    History, &
    Comment) &
  RESULT( err_stat )
    ! Arguments
    INTEGER(Long),           INTENT(IN)  :: ncid   
    INTEGER      , OPTIONAL, INTENT(OUT) :: Release
    INTEGER      , OPTIONAL, INTENT(OUT) :: Version
    CHARACTER(*) , OPTIONAL, INTENT(OUT) :: Title  
    CHARACTER(*) , OPTIONAL, INTENT(OUT) :: History
    CHARACTER(*) , OPTIONAL, INTENT(OUT) :: Comment
    ! Function result
    INTEGER :: err_stat
    ! Local parameters
    CHARACTER(*), PARAMETER :: ROUTINE_NAME = 'LBLRTM_File_netCDF_IO::ReadGAtts'
    ! Local variables
    CHARACTER(ML)   :: msg
    CHARACTER(256)  :: gattname
    CHARACTER(5000) :: gattstring
    INTEGER(Long) :: nf90_stat

    ! Set up
    err_stat = SUCCESS

    ! The global attributes
    ! ...The Release
    IF ( PRESENT(Release) ) THEN
      gattname = RELEASE_GATTNAME
      nf90_stat = NF90_GET_ATT( ncid,NF90_GLOBAL,TRIM(gattname),Release )
      IF ( nf90_stat /= NF90_NOERR ) THEN
        err_stat = FAILURE
        msg = 'Error reading '//TRIM(gattname)//' attribute - '// &
              TRIM(NF90_STRERROR( nf90_stat ) )
        CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
      END IF
    END IF
    ! ...The Version
    IF ( PRESENT(Version) ) THEN
      gattname = VERSION_GATTNAME
      nf90_stat = NF90_GET_ATT( ncid,NF90_GLOBAL,TRIM(gattname),Version )
      IF ( nf90_stat /= NF90_NOERR ) THEN
        err_stat = FAILURE
        msg = 'Error reading '//TRIM(gattname)//' attribute - '// &
              TRIM(NF90_STRERROR( nf90_stat ) )
        CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
      END IF
    END IF
    ! ...The Title
    IF ( PRESENT(Title) ) THEN
      gattname = TITLE_GATTNAME; gattstring = ''
      nf90_stat = NF90_GET_ATT( ncid,NF90_GLOBAL,TRIM(gattname),gattstring )
      IF ( nf90_stat /= NF90_NOERR ) THEN
        err_stat = FAILURE
        msg = 'Error reading '//TRIM(gattname)//' attribute - '// &
              TRIM(NF90_STRERROR( nf90_stat ) )
        CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
      END IF
      CALL StrClean( gattstring )
      Title = gattstring(1:MIN(LEN(Title), LEN_TRIM(gattstring)))
    END IF
    ! ...The History
    IF ( PRESENT(History) ) THEN
      gattname = HISTORY_GATTNAME; gattstring = ''
      nf90_stat = NF90_GET_ATT( ncid,NF90_GLOBAL,TRIM(gattname),gattstring )
      IF ( nf90_stat /= NF90_NOERR ) THEN
        err_stat = FAILURE
        msg = 'Error reading '//TRIM(gattname)//' attribute - '// &
              TRIM(NF90_STRERROR( nf90_stat ) )
        CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
      END IF
      CALL StrClean( gattstring )
      History = gattstring(1:MIN(LEN(History), LEN_TRIM(gattstring)))
    END IF
    ! ...The Comment
    IF ( PRESENT(Comment) ) THEN
      gattname = COMMENT_GATTNAME; gattstring = ''
      nf90_stat = NF90_GET_ATT( ncid,NF90_GLOBAL,TRIM(gattname),gattstring )
      IF ( nf90_stat /= NF90_NOERR ) THEN
        err_stat = FAILURE
        msg = 'Error reading '//TRIM(gattname)//' attribute - '// &
              TRIM(NF90_STRERROR( nf90_stat ) )
        CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
      END IF
      CALL StrClean( gattstring )
      Comment = gattstring(1:MIN(LEN(Comment), LEN_TRIM(gattstring)))
    END IF

  END FUNCTION ReadGAtts

  ! Function to write the global/group attributes.

  FUNCTION WriteGAtts( &
    ncid   , &
    Release, &
    Version, &
    Title  , &
    History, &
    Comment) &
  RESULT( err_stat )
    ! Arguments
    INTEGER(Long),           INTENT(IN) :: ncid   
    INTEGER      , OPTIONAL, INTENT(IN) :: Release
    INTEGER      , OPTIONAL, INTENT(IN) :: Version
    CHARACTER(*) , OPTIONAL, INTENT(IN) :: Title  
    CHARACTER(*) , OPTIONAL, INTENT(IN) :: History
    CHARACTER(*) , OPTIONAL, INTENT(IN) :: Comment
    ! Function result
    INTEGER :: err_stat
    ! Local parameters
    CHARACTER(*), PARAMETER :: ROUTINE_NAME = 'LBLRTM_File_netCDF_IO::WriteGAtts'
    CHARACTER(*), PARAMETER :: WRITE_MODULE_HISTORY_GATTNAME   = 'write_module_history'
    CHARACTER(*), PARAMETER :: CREATION_DATE_AND_TIME_GATTNAME = 'creation_date_and_time'
    ! Local variables
    CHARACTER(ML) :: msg
    CHARACTER(ML) :: gattname
    CHARACTER(8)  :: cdate
    CHARACTER(10) :: ctime
    CHARACTER(5)  :: czone
    INTEGER(Long) :: nf90_stat

    ! Set up
    err_stat = SUCCESS
    msg = ''

    ! Mandatory global attributes
    ! ...Software ID
    gattname = WRITE_MODULE_HISTORY_GATTNAME
    nf90_stat = NF90_PUT_ATT( ncid,NF90_GLOBAL,TRIM(gattname),MODULE_VERSION_ID )
    IF ( nf90_stat /= NF90_NOERR ) THEN
      err_stat = FAILURE
      msg = 'Error writing '//TRIM(gattname)//' attribute - '//&
            TRIM(NF90_STRERROR( nf90_stat ) )
      CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
    END IF
    ! ...Creation date
    CALL DATE_AND_TIME( cdate, ctime, czone )
    gattname = CREATION_DATE_AND_TIME_GATTNAME
    nf90_stat = NF90_PUT_ATT( ncid,NF90_GLOBAL,TRIM(gattname), &
                              cdate(1:4)//'/'//cdate(5:6)//'/'//cdate(7:8)//', '// &
                              ctime(1:2)//':'//ctime(3:4)//':'//ctime(5:6)//' '// &
                              czone//'UTC' )
    IF ( nf90_stat /= NF90_NOERR ) THEN
      err_stat = FAILURE
      msg = 'Error writing '//TRIM(gattname)//' attribute - '//&
            TRIM(NF90_STRERROR( nf90_stat ) )
      CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
    END IF


    ! Optional global attributes
    ! ...The Release
    IF ( PRESENT(Release) ) THEN
      gattname = RELEASE_GATTNAME
      nf90_stat = NF90_PUT_ATT( ncid,NF90_GLOBAL,TRIM(gattname),Release )
      IF ( nf90_stat /= NF90_NOERR ) THEN
        err_stat = FAILURE
        msg = 'Error writing '//TRIM(gattname)//' attribute - '//&
              TRIM(NF90_STRERROR( nf90_stat ) )
        CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
      END IF
    END IF
    ! ...The Version
    IF ( PRESENT(Version) ) THEN
      gattname = VERSION_GATTNAME
      nf90_stat = NF90_PUT_ATT( ncid,NF90_GLOBAL,TRIM(gattname),Version )
      IF ( nf90_stat /= NF90_NOERR ) THEN
        err_stat = FAILURE
        msg = 'Error writing '//TRIM(gattname)//' attribute - '//&
              TRIM(NF90_STRERROR( nf90_stat ) )
        CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
      END IF
    END IF
    ! ...The Title
    IF ( PRESENT(Title) ) THEN
      gattname = TITLE_GATTNAME
      nf90_stat = NF90_PUT_ATT( ncid,NF90_GLOBAL,TRIM(gattname),Title )
      IF ( nf90_stat /= NF90_NOERR ) THEN
        err_stat = FAILURE
        msg = 'Error writing '//TRIM(gattname)//' attribute - '//&
              TRIM(NF90_STRERROR( nf90_stat ) )
        CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
      END IF
    END IF
    ! ...The History
    IF ( PRESENT(History) ) THEN
      gattname = HISTORY_GATTNAME
      nf90_stat = NF90_PUT_ATT( ncid,NF90_GLOBAL,TRIM(gattname),History )
      IF ( nf90_stat /= NF90_NOERR ) THEN
        err_stat = FAILURE
        msg = 'Error writing '//TRIM(gattname)//' attribute - '//&
              TRIM(NF90_STRERROR( nf90_stat ) )
        CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
      END IF
    END IF
    ! ...The Comment
    IF ( PRESENT(Comment) ) THEN
      gattname = COMMENT_GATTNAME
      nf90_stat = NF90_PUT_ATT( ncid,NF90_GLOBAL,TRIM(gattname),Comment )
      IF ( nf90_stat /= NF90_NOERR ) THEN
        err_stat = FAILURE
        msg = 'Error writing '//TRIM(gattname)//' attribute - '//&
              TRIM(NF90_STRERROR( nf90_stat ) )
        CALL Display_Message( ROUTINE_NAME,msg,err_stat ); RETURN
      END IF
    END IF

  END FUNCTION WriteGAtts
