#------------------------------------------------------------------------------
#
# NAME:
#       make.macros
#
# PURPOSE:
#       Unix make utility include file for definition of common make
#       macros used in building CRTM software
#
# LANGUAGE:
#       Unix make
#
# CALLING SEQUENCE:
#       include make.macros
#
# CREATION HISTORY:
#       Written by:     Paul van Delst, CIMSS/SSEC 08-Jun-2000
#                       paul.vandelst@ssec.wisc.edu
#
#  Copyright (C) 2000 Paul van Delst
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# $Id: make.macros 55354 2015-04-23 20:32:56Z paul.vandelst@noaa.gov $
#
#------------------------------------------------------------------------------

#################################################################################
#                                                                               #
#                        GENERAL USE MACRO SPECIFICATION                        #
#                                                                               #
#################################################################################

# Define default shell
SHELL = /bin/sh


# Define link, copy and delete commands
LINK = ln -sf
COPY = cp 
MOVE = mv -f
REMOVE = rm -f


# Define tarballer commands
TARBALLER = tar
TARBALL_CREATE = $(TARBALLER) cvhf
TARBALL_APPEND = $(TARBALLER) rvhf
TARBALL_EXTRACT = $(TARBALLER) xvhf


# Define archiver and flags
ARCHIVER = ar
ARCHIVER_FLAGS = crvs


# Define scripts used in makefiles
# ...Scripts to link and unlink files
LINK_SCRIPT = linkfiles.sh
UNLINK_SCRIPT = unlinkfiles.sh


# CRTM library build definitions
# ...Library name
PACKAGE = crtm
LIBRARY = lib$(PACKAGE).a
# ...Module file extension
EXT_MOD = mod
# ...Directory definitions
BUILD_DIR = Build
LIBSRC_DIR = libsrc
LIB_DIR = lib
INC_DIR = include
CHECK_DIR = test
COEFF_DIR = coefficients



#################################################################################
#                                                                               #
#                 SPECIFIC PLATFORM/COMPILER FLAG SPECIFICATION                 #
#                                                                               #
#################################################################################

# ---------------------------
# gfortran compiler for linux
# ---------------------------



# The compiler and linker name
NAME_GFORTRAN = ifort

# Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_GFORTRAN_DEBUG = 
LINUX_FLAGS_GFORTRAN_DEBUG = "FC=${NAME_INTEL}" \
                          "FL=${NAME_INTEL}" \
                          "FCFLAGS= -c \
                                    -g \
                                    -check bounds \
                                    -convert big_endian \
                                    -stand f08 \
                                    -traceback \
                                    -free \
                                    -assume byterecl \
                                    -fp-stack-check \
                                    -mieee-fp \
                                    ${INCLUDES} \
                                    ${LINUX_COMMON_FLAGS_DEBUG}" \
	                  "LDFLAGS= ${LINUX_COMMON_FLAGS_DEBUG} \
                                    ${LIBRARIES} \
                                    -o" \
                          "ENDIAN=Little_Endian"

# The compiler and linker name
NAME_GFORTRAN = gfortran

# Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_GFORTRAN_DEBUG = 
LINUX_FLAGS_GFORTRAN_DEBUG = "FC=${NAME_GFORTRAN}" \
	                     "FL=${NAME_GFORTRAN}" \
	                     "FCFLAGS= -c \
                                       -fbounds-check \
                                       -fimplicit-none \
                                       -fconvert=big-endian \
                                       -ffpe-trap=overflow,zero,invalid \
                                       -ffree-form \
                                       -fno-second-underscore \
                                       -frecord-marker=4 \
                                       -fbacktrace \
                                       -ggdb \
	                               -static \
                                       -Wall \
                                       -std=f2008 \
                                       ${INCLUDES} \
                                       ${LINUX_COMMON_FLAGS_GFORTRAN_DEBUG}" \
	                     "LDFLAGS= ${LINUX_COMMON_FLAGS_GFORTRAN_DEBUG} \
                                       ${LIBRARIES} \
                                       -o" \
                             "ENDIAN=Little_Endian"

# Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_GFORTRAN_PROD =
LINUX_FLAGS_GFORTRAN_PROD = "FC=${NAME_GFORTRAN}" \
	                    "FL=${NAME_GFORTRAN}" \
	                    "FCFLAGS= -c \
                                      -O3 \
                                      -fimplicit-none \
                                      -fconvert=big-endian \
                                      -ffast-math \
                                      -ffree-form \
                                      -fno-second-underscore \
                                      -frecord-marker=4 \
                                      -funroll-loops \
                                      -ggdb \
	                              -static \
                                      -Wall \
                                      -std=f2008 \
                                      ${INCLUDES} \
                                      ${LINUX_COMMON_FLAGS_GFORTRAN_PROD}" \
	                    "LDFLAGS= ${LINUX_COMMON_FLAGS_GFORTRAN_PROD} \
                                      ${LIBRARIES} \
                                      -o" \
                            "ENDIAN=Little_Endian"
                            
# Here set the DEFAULT gfortran compiler flags
LINUX_FLAGS_GFORTRAN = $(LINUX_FLAGS_GFORTRAN_DEBUG)


# -------------------------------------
# Portland Group f95 compiler for linux
# -------------------------------------

# The compiler and linker name
NAME_PGI = pgf95

# Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_PGI_DEBUG = -Kieee
LINUX_FLAGS_PGI_DEBUG = "FC=${NAME_PGI}" \
                        "FL=${NAME_PGI}" \
                        "FCFLAGS= -c \
                                  -g \
                                  -byteswapio \
                                  -Ktrap=ovf,divz \
                                  -Mbounds \
                                  -Mchkstk \
                                  -Mdclchk \
                                  -Minform,inform \
                                  -Mnosave \
                                  -Mref_externals \
                                  ${INCLUDES} \
                                  ${LINUX_COMMON_FLAGS_PGI_DEBUG}" \
                        "LDFLAGS= ${LINUX_COMMON_FLAGS_PGI_DEBUG} \
                                  ${LIBRARIES} \
                                  -o" \
                        "ENDIAN=Little_Endian"

# Compiler settings for PRODUCTION builds
LINUX_COMMON_FLAGS_PGI_PROD =
LINUX_FLAGS_PGI_PROD = "FC=${NAME_PGI}" \
                       "FL=${NAME_PGI}" \
                       "FCFLAGS= -c \
                                 -g \
                                 -fast \
                                 -byteswapio \
                                 ${INCLUDES} \
                                 ${LINUX_COMMON_FLAGS_PGI_PROD}" \
                       "LDFLAGS= ${LINUX_COMMON_FLAGS_PGI_PROD} \
                                 ${LIBRARIES} \
                                 -o" \
                       "ENDIAN=Little_Endian"

# Here set the DEFAULT PGI compiler flags
LINUX_FLAGS_PGI = $(LINUX_FLAGS_PGI_DEBUG)



# ----------------------------
# Intel f95 compiler for linux
# ----------------------------

# The compiler and linker name
NAME_INTEL = ifort

# Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_INTEL_DEBUG = 
LINUX_FLAGS_INTEL_DEBUG = "FC=${NAME_INTEL}" \
                          "FL=${NAME_INTEL}" \
                          "FCFLAGS= -c \
                                    -g \
                                    -check bounds \
                                    -convert big_endian \
                                    -stand f08 \
                                    -traceback \
                                    -free \
                                    -assume byterecl \
                                    -fp-stack-check \
                                    -mieee-fp \
                                    ${INCLUDES} \
                                    ${LINUX_COMMON_FLAGS_DEBUG}" \
	                  "LDFLAGS= ${LINUX_COMMON_FLAGS_DEBUG} \
                                    ${LIBRARIES} \
                                    -o" \
                          "ENDIAN=Little_Endian"

# Compiler settings for PRODUCTION builds
LINUX_COMMON_FLAGS_INTEL_PROD =
LINUX_FLAGS_INTEL_PROD = "FC=${NAME_INTEL}" \
	                 "FL=${NAME_INTEL}" \
	                 "FCFLAGS= -c \
                                   -O2 \
                                   -convert big_endian \
                                   -stand f08 \
                                   -free \
      	                           -assume byterecl \
                                   ${INCLUDES} \
                                   ${LINUX_COMMON_FLAGS_PROD}" \
                         "LDFLAGS= ${LINUX_COMMON_FLAGS_PROD} \
                                   ${LIBRARIES} \
                                   -o" \
                         "ENDIAN=Little_Endian"

# Here set the DEFAULT Intel compiler flags
LINUX_FLAGS_INTEL = $(LINUX_FLAGS_INTEL_DEBUG)


# ----------------------
# g95 compiler for linux
# ----------------------

# The compiler and linker name
NAME_G95 = g95

# Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_G95_DEBUG = 
LINUX_FLAGS_G95_DEBUG = "FC=${NAME_G95}" \
	                "FL=${NAME_G95}" \
	                "FCFLAGS= -c \
                                  -fbounds-check \
                                  -fendian=big \
                                  -ffree-form \
                                  -fno-second-underscore \
                                  -ftrace=frame \
                                  -malign-double \
	                          -Wall \
                                  ${INCLUDES} \
                                  ${LINUX_COMMON_FLAGS_G95_DEBUG}" \
                        "LDFLAGS= ${LINUX_COMMON_FLAGS_G95_DEBUG} \
                                  ${LIBRARIES} \
                                  -o" \
                        "ENDIAN=Little_Endian"

# Compiler settings for PRODUCTION builds
LINUX_COMMON_FLAGS_G95_PROD =
LINUX_FLAGS_G95_PROD = "FC=${NAME_G95}" \
	               "FL=${NAME_G95}" \
	               "FCFLAGS= -c \
                                 -O2 \
                                 -fendian=big \
                                 -ffast-math \
                                 -ffree-form \
		                 -fno-second-underscore \
                                 -funroll-loops \
                                 -malign-double \
                                 ${INCLUDES} \
                                 ${LINUX_COMMON_FLAGS_G95_PROD}" \
                       "LDFLAGS= ${LINUX_COMMON_FLAGS_G95_PROD} \
                                 ${LIBRARIES} \
                                 -o" \
                       "ENDIAN=Little_Endian"


# Here set the DEFAULT g95 compiler flags
LINUX_FLAGS_G95 = $(LINUX_FLAGS_G95_DEBUG)


# ---------------------------------------
# Define the default Linux compiler flags
# ---------------------------------------

LINUX_FLAGS = $(LINUX_FLAGS_GFORTRAN)

#LINUX_FLAGS = $(LINUX_FLAGS_PGI)
#LINUX_FLAGS = $(LINUX_FLAGS_INTEL)
#LINUX_FLAGS = $(LINUX_FLAGS_G95)

