#------------------------------------------------------------------------------
#
# NAME:
#       make.common_targets
#
# PURPOSE:
#       Unix make utility include file for common targets used for builds.
#       Note that this include file is intended for use with the make.macros
#       and make.rules include files also.
#
# LANGUAGE:
#       Unix make
#
# CALLING SEQUENCE:
#       include make.common_targets
#
# CREATION HISTORY:
#       Written by:     Paul van Delst, 30-Jun-2006
#                       paul.vandelst@noaa.gov
#
# $Id: make.common_targets 55358 2015-04-23 20:37:48Z paul.vandelst@noaa.gov $
#
#------------------------------------------------------------------------------



# ------------------------------
# Default build based on OS type
# ------------------------------
all:
	@echo "OS type detected: "`uname -s`
	@case `uname -s` in \
	  "Linux"|"Darwin") make -f $(MAKE_FILE) build $(LINUX_FLAGS) ;; \
	  *) echo "This system is not supported" ;; \
       esac


# ---------------------------------
# Link creation and removal targets
# .................................
# These are empty here and should
# be extended in client makefiles
# as needed.
# ---------------------------------
create_links:

remove_links:


# -----------------
# Build the program
# -----------------
build: create_links $(OBJ_FILES)
	$(FL) $(OBJ_FILES) $(EXTRA_LDFLAGS) $(LDFLAGS) $(EXE_FILE) $(LIBS)


# --------
# Clean up
# --------
clean:
	$(REMOVE) $(OBJ_FILES) *.mod *.MOD gmon.out

# ...Squeaky clean
realclean: clean remove_links
	$(REMOVE) $(EXE_FILE)

# ...Alias
real_clean: realclean


# ----------------------
# Install the executable
# ----------------------
install:
	@if [ -d $(HOME)/bin ]; then \
	  $(MOVE) $(EXE_FILE) $(HOME)/bin; \
	fi


# ---------------------
# Build for timing runs
# ---------------------
timing:
	$(MAKE) clean; $(MAKE) EXTRA_FCFLAGS="-DTIMING"


# ----------------------
# Specific build targets
# ----------------------
gfortran_debug:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_GFORTRAN_DEBUG)

gfortran:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_GFORTRAN_PROD)

gfortran-debug: gfortran_debug



intel_debug:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_INTEL_DEBUG)

intel:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_INTEL_PROD)

intel-debug: intel_debug

ifort_debug: intel_debug

ifort: intel

ifort-debug: intel_debug



pgi_debug:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_PGI_DEBUG)

pgi:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_PGI_PROD)

pgi-debug: pgi_debug



g95_debug:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_G95_DEBUG)

g95:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_G95_PROD)

g95-debug: g95_debug

