#!/bin/sh


#-------------------------------------------------------------------------------
#                        -- USAGE DESCRIPTION FUNCTION --
#-------------------------------------------------------------------------------

usage()
{
  echo
  echo " Usage: Define_Molecule_Tag  index"
  echo
  echo "   -h       Print this message and exit"
  echo
  echo "   index    The molecule set index number for which the definitions string"
  echo "            is required."
  echo "            Valid molecule set indices are:"
  echo "               1-7 == individual molecule numbers (no continua)"
  echo "               8   == all first seven molecules (no continua)"
  echo "               9   == continua only"
  echo "              10   == all first seven molecules (and their continua)"
  echo "              11   == water vapor + ozone only (and their continua)"
  echo "              12   == water vapor only (and it's continua)"
  echo "              13   == dry gases. Everything but h2o and o3 (and their continua)"
  echo "              14   == ozone only (and it's continua)"
  echo "              15   == water vapor continua only"
  echo "              17   == O2 "
  echo "              18   == O2 + CH4"
  echo "              19   == O2 + CH4 + CO"
  echo "              20   == O2 + CH4 + CO + N2O"
  echo "              21   == O2 + CH4 + CO + N2O + CO2"
  echo "              22   == O2 + CH4 + CO + N2O + CO2 + H20"
  echo
}


#-------------------------------------------------------------------------------
#                       -- PARSE THE COMMAND LINE OPTIONS --
#-------------------------------------------------------------------------------

  while getopts h OPTVAL; do


    # --------------------------------------------
    # If option argument looks like another option
    # exit the loop
    # --------------------------------------------

    case ${OPTARG} in
      -*) break;;
    esac


    # ----------------------------
    # Parse the valid options here
    # ----------------------------

    case ${OPTVAL} in
      h)  usage
          exit 0;;
      :|\?) OPTVAL=${OPTARG}
            break;;
    esac

  done


  # ----------------------------
  # Remove the options processed
  # ----------------------------

  shift `expr ${OPTIND} - 1`


  # ------------------------------------------
  # Now output invalidities based on OPTVAL
  # Need to do this as getopts does not handle
  # the situations where an option is passed
  # as an argument to another option.
  # ------------------------------------------

  case ${OPTVAL} in


    # --------------------------------------------
    # If OPTVAL contains nothing, then all options
    # have been successfully parsed
    # --------------------------------------------

    \?) if [ $# -lt 1 ]; then
          echo " Missing 'index' argument"
          usage
          exit 2
        fi;;


    # --------------
    # Invalid option
    # --------------

    ?) ( echo " Invalid option '-${OPTARG}'" ; usage ) | more
       exit 2;;

  esac

  MOLECULE_INDEX=$1



#-------------------------------------------------------------------------------
#                       -- CONSTRUCT THE MOLECULE TAG --
#-------------------------------------------------------------------------------

  case ${MOLECULE_INDEX} in

    # -- Individual molecules
    1|2|3|4|5|6|7) MOLECULE_TAG="mol${MOLECULE_INDEX}";;

    # -- All first seven molecules but no continua
    8) MOLECULE_TAG="anc";;

    # -- Just the continua
    9) MOLECULE_TAG="con";;

    # -- All first seven molecules + continua
    10) MOLECULE_TAG="awc";;

    # -- Water vapor + ozone only (and their continua)
    11) MOLECULE_TAG="wvo";;

    # -- Water vapor only (and its continua)
    12) MOLECULE_TAG="wet";;

    # -- "Dry" gases. Everything except water vapor and ozone
    13) MOLECULE_TAG="dry";;

    # -- Ozone only (and its continua)
    14) MOLECULE_TAG="ozo";;

    # -- Water vapor continua only (NO line data)
    15) MOLECULE_TAG="wco";;

    # -- O2 
    17) MOLECULE_TAG="molc1";;

    # -- O2 +CH4
    18) MOLECULE_TAG="molc2";;

    # -- O2+CH4+CO
    19) MOLECULE_TAG="molc3";;

    # -- O2+CH4+CO+N2O
    20) MOLECULE_TAG="molc4";;

    # -- O2+CH4+CO+N2O+CO2
    21) MOLECULE_TAG="molc5";;

    # -- O2+CH4+CO+N2O+CO2+H20
    22) MOLECULE_TAG="molc6";;

    # -- Invalid option
    *) exit 2;;
  esac



#-------------------------------------------------------------------------------
#                           -- OUTPUT THE RESULT --
#-------------------------------------------------------------------------------

  echo ${MOLECULE_TAG}


